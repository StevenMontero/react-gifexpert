{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","gif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAZtB,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,Y,uBCLhBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDAE0BC,UAAUH,GAFpC,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATpB,kBAaXM,GAbW,4CAAH,sDCCNO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEdd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IAFhB,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAQxC,OAJAC,qBAAU,WACRxB,EAAOC,GAAUwB,MAAK,SAAAC,GAASH,EAAS,CAACf,KAAKkB,EAAKL,SAAQ,SAC1D,CAACpB,IAEGqB,EDFuBK,CAAa1B,GAA/Ba,EAJ2B,EAIhCN,KAAYa,EAJoB,EAIpBA,QAEnB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAU,uBAAGJ,UAAU,yCAAb,aACX,yBAAKA,UAAU,aAEbH,EAAOJ,KAAI,SAACkB,GAAS,OAAO,kBAAC,EAAD,eAAaC,IAAKD,EAAIhB,IAAQgB,UEKnDE,EAlBM,WAAM,MAEW3C,mBAAS,CAAC,cAFrB,mBAElB4C,EAFkB,KAEN7C,EAFM,KAIzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG6C,EAAWrB,KAAI,SAACqB,GACf,OAAO,kBAAC,EAAD,CAASF,IAAKE,EAAY9B,SAAU8B,UCTrDC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.bfc5fcef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  const handleInput = (e)=>{\r\n      setinputValue(e.target.value);\r\n  };\r\n  const handleSummit = (e)=>{\r\n    e.preventDefault();\r\n    if(inputValue.trim().length>2){\r\n      setCategories(cats =>[inputValue,...cats]);\r\n      setinputValue('');\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSummit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInput} />\r\n    </form>\r\n  );\r\n\r\n\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories : PropTypes.func.isRequired,\r\n};\r\n","\r\nexport const getGif = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=UPgv3m6yVOj6pPf5NIyjmjJEQBDBwSiM`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n     \r\n    });\r\n    return gifs;\r\n}","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n  \r\n  const {data:images,loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading &&<p className=\"card animate__animated animate__flash\">Loading..</p> }\r\n      <div className=\"card-gird\">\r\n        {\r\n        images.map((gif) => {return <GifGridItem key={gif.id} {...gif} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState,useEffect } from \"react\";\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setstate] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {  \r\n    getGif(category).then(imgs => {setstate({data:imgs,loading:false})});\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  //   const categorries = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((categories) => {\r\n          return <GifGrid key={categories} category={categories}/>;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}